unit PVENTA77;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ComCtrls, Buttons, QuerySearchDlgADO, Db;

type
  TfrmExistProducto = class(TForm)
    Label6: TLabel;
    Label1: TLabel;
    SpeedButton1: TSpeedButton;
    Fecha1: TDateTimePicker;
    Fecha2: TDateTimePicker;
    edProd: TEdit;
    tProd: TEdit;
    btPrint: TBitBtn;
    btClose: TBitBtn;
    Label4: TLabel;
    btAlmacen: TSpeedButton;
    edAlmacen: TEdit;
    tAlmacen: TEdit;
    Search: TQrySearchDlgADO;
    ckcompra: TCheckBox;
    ckentrada: TCheckBox;
    ckdevolventa: TCheckBox;
    ckfactura: TCheckBox;
    cksalilda: TCheckBox;
    ckdevolcompra: TCheckBox;
    chkAjusteInv: TCheckBox;
    procedure SpeedButton1Click(Sender: TObject);
    procedure edProdKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure edAlmacenChange(Sender: TObject);
    procedure edAlmacenKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure btAlmacenClick(Sender: TObject);
    procedure btPrintClick(Sender: TObject);
    procedure btCloseClick(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
    prod : integer;
  end;

var
  frmExistProducto: TfrmExistProducto;

implementation

uses PVENTA33, RVENTA42, SIGMA01, RVENTA92;

{$R *.dfm}

procedure TfrmExistProducto.SpeedButton1Click(Sender: TObject);
begin
  application.createform(tfrmBuscaProducto, frmBuscaProducto);
  frmBuscaProducto.showmodal;
  if frmBuscaProducto.seleccion = 1 then
  begin
    if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'I' then
       edProd.text := inttostr(frmBuscaProducto.QProductosPRO_CODIGO.value)
    else if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'F' then
       edProd.text := frmBuscaProducto.QProductosPRO_RFABRIC.value
    else if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'O' then
       edProd.text := frmBuscaProducto.QProductosPRO_RORIGINAL.value;
    prod := frmBuscaProducto.QProductosPRO_CODIGO.value;
    dm.Query1.close;
    dm.Query1.sql.clear;
    dm.Query1.sql.add('select pro_nombre from productos');
    dm.Query1.sql.add('where emp_codigo = :emp');
    if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'I' then
       dm.Query1.sql.add('and pro_codigo = '+edProd.text)
    else if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'F' then
       dm.Query1.sql.add('and pro_rfabric = '+#39+edProd.text+#39)
    else if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'O' then
       dm.Query1.sql.add('and pro_roriginal = '+#39+edProd.text+#39);
    dm.Query1.Parameters.parambyname('emp').Value := dm.QParametrosPAR_INVEMPRESA.value;
    dm.Query1.open;
    tProd.text := dm.Query1.FieldByName('pro_nombre').AsString;
    edProd.SetFocus;
  end;
  frmBuscaProducto.release;
end;

procedure TfrmExistProducto.edProdKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = vk_return then
  begin
    if trim(edProd.text) <> '' then
    begin
      dm.Query1.close;
      dm.Query1.sql.clear;
      dm.Query1.sql.add('select pro_nombre, pro_codigo from productos');
      dm.Query1.sql.add('where emp_codigo = :emp');
      if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'I' then
         dm.Query1.sql.add('and pro_codigo = '+edProd.text)
      else if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'F' then
         dm.Query1.sql.add('and pro_rfabric = '+#39+edProd.text+#39)
      else if dm.QParametrosPAR_CODIGOPRODUCTO.value = 'O' then
         dm.Query1.sql.add('and pro_roriginal = '+#39+edProd.text+#39);
      dm.Query1.Parameters.parambyname('emp').Value := dm.QParametrosPAR_INVEMPRESA.value;
      dm.Query1.open;
      if dm.Query1.recordcount = 0 then
      begin
        messagedlg('ESTE PRODUCTO NO EXISTE',mterror,[mbok],0);
        edProd.setfocus;
      end
      else
      begin
        tProd.text := dm.Query1.FieldByName('pro_nombre').AsString;
        prod := dm.Query1.FieldByName('pro_codigo').asinteger;
      end;
    end;
  end;
end;

procedure TfrmExistProducto.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  if messagedlg('SALIR DE ESTA PANTALLA?',
  mtconfirmation, [mbyes,mbno],0) = mrno then
    abort
  else
    action := cafree;
end;

procedure TfrmExistProducto.FormCreate(Sender: TObject);
begin
  Fecha1.Date := date;
  Fecha2.Date := date;
end;

procedure TfrmExistProducto.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = vk_f10 then close;
end;

procedure TfrmExistProducto.edAlmacenChange(Sender: TObject);
begin
  if trim(edAlmacen.text) = '' then tAlmacen.text := '';
end;

procedure TfrmExistProducto.edAlmacenKeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  if key = vk_return then
  begin
    if trim(edAlmacen.text) <> '' then
    begin
      dm.Query1.close;
      dm.Query1.sql.clear;
      dm.Query1.sql.add('select alm_nombre, alm_codigo');
      dm.Query1.sql.add('from almacen');
      dm.Query1.sql.add('where emp_codigo = :emp');
      dm.Query1.sql.add('and alm_codigo = :alm');
      dm.Query1.Parameters.parambyname('alm').Value := strtoint(edAlmacen.text);
      dm.Query1.Parameters.parambyname('emp').Value := dm.QParametrosPAR_INVEMPRESA.value;
      dm.Query1.open;
      if dm.Query1.recordcount = 0 then
      begin
        messagedlg('ALMACEN NO EXISTE',mterror,[mbok],0);
        edAlmacen.setFocus;
      end
      else
        tAlmacen.text := dm.Query1.fieldbyname('alm_nombre').asstring;
    end;
  end;
end;

procedure TfrmExistProducto.btAlmacenClick(Sender: TObject);
begin
  search.AliasFields.clear;
  search.AliasFields.add('Nombre');
  search.AliasFields.add('Código');
  Search.Query.clear;
  Search.Query.add('select alm_nombre, alm_codigo');
  Search.ResultField := 'alm_codigo';
  Search.Query.add('from almacen');
  Search.Query.add('where emp_codigo = '+inttostr(dm.QParametrosPAR_INVEMPRESA.value));
  Search.Title := 'Listado de Almacenes';
  if Search.execute then
  begin
    edAlmacen.text := search.valuefield;
    edAlmacen.setfocus;
    dm.Query1.close;
    dm.Query1.sql.clear;
    dm.Query1.sql.add('select alm_codigo, alm_nombre');
    dm.Query1.sql.add('from almacen');
    dm.Query1.sql.add('where emp_codigo = :emp');
    dm.Query1.sql.add('and alm_codigo = :alm');
    dm.Query1.Parameters.parambyname('alm').Value := strtoint(search.valuefield);
    dm.Query1.Parameters.parambyname('emp').Value := dm.QParametrosPAR_INVEMPRESA.value;
    dm.Query1.open;
    tAlmacen.text := dm.Query1.fieldbyname('alm_nombre').asstring;
    edAlmacen.setfocus;
  end;
end;

procedure TfrmExistProducto.btPrintClick(Sender: TObject);
begin
  if Trim(edProd.Text) = '' then
  begin
    if Trim(edAlmacen.Text) <> '' then
    begin
      Application.CreateForm(tRExistProdGeneral, RExistProdGeneral);
      screen.Cursor := crHourGlass;

      //RExistProdGeneral.entradas := ckEntradas.Checked;
      //RExistProdGeneral.salidas  := ckConduces.Checked;

      RExistProdGeneral.entradas := True;
      RExistProdGeneral.salidas  := True;

      RExistProdGeneral.lbFecha.Caption := 'Del '+DateToStr(Fecha1.Date)+' Al '+DateToStr(Fecha2.Date);
      RExistProdGeneral.lbAlmacen.Caption := tAlmacen.Text;

      RExistProdGeneral.QProductos.Parameters.ParamByName('fec1').DataType := ftDate;
      RExistProdGeneral.QProductos.Parameters.ParamByName('fec2').DataType := ftDate;
      RExistProdGeneral.QProductos.Parameters.ParamByName('fec1').Value    := Fecha1.Date;
      RExistProdGeneral.QProductos.Parameters.ParamByName('fec2').Value    := Fecha2.Date;
      RExistProdGeneral.QProductos.Parameters.ParamByName('alm').Value     := StrToInt(edAlmacen.Text);
      RExistProdGeneral.QProductos.Parameters.ParamByName('alm2').Value    := StrToInt(edAlmacen.Text);
      RExistProdGeneral.QProductos.Open;

      screen.Cursor := crDefault;
      RExistProdGeneral.PrinterSetup;
      RExistProdGeneral.Preview;
      RExistProdGeneral.Destroy;
    end;
  end
  else
  begin
    Application.CreateForm(tRExistProd, RExistProd);
    screen.Cursor := crHourGlass;
    RExistProd.lbAlmacen.Caption := tAlmacen.Text;
    if Trim(edAlmacen.Text) <> '' then
    begin
      RExistProd.QProductos.SQL.Clear;
      RExistProd.QProductos.SQL.Add('select p.PRO_CODIGO, e.exi_Cantidad as PRO_EXISTENCIA,');
      RExistProd.QProductos.SQL.Add('p.PRO_INVINICIAL, p.PRO_NOMBRE, p.PRO_RFABRIC,');
      RExistProd.QProductos.SQL.Add('p.PRO_RORIGINAL, e.exi_fisico as PRO_INVFISICO,');
      RExistProd.QProductos.SQL.Add('p.EMP_CODIGO, e.exi_empaque as PRO_EXISTEMPAQUE');
      RExistProd.QProductos.SQL.Add('from PRODUCTOS p, existencias e');
      RExistProd.QProductos.SQL.Add('where p.emp_codigo = e.emp_codigo');
      RExistProd.QProductos.SQL.Add('and p.pro_codigo = e.pro_codigo');
      RExistProd.QProductos.SQL.Add('and e.alm_codigo = '+Trim(edAlmacen.Text));
      RExistProd.QProductos.SQL.Add('and p.emp_codigo = :emp');
      RExistProd.QProductos.SQL.Add('and p.pro_codigo = :prod');

      RExistProd.QEntradas.SQL.Clear;
      RExistProd.QEntradas.SQL.Add('SELECT E.ENT_NUMERO, E.ENT_FECHA, D.DET_MEDIDA, U.USU_NOMBRE,');
      RExistProd.QEntradas.SQL.Add('e.ent_concepto,');
      RExistProd.QEntradas.SQL.Add('SUM(D.DET_CANTIDAD) AS CANTIDAD');
      RExistProd.QEntradas.SQL.Add('FROM ENTRADAINV E, DET_ENTRADA D, USUARIOS U');
      RExistProd.QEntradas.SQL.Add('WHERE E.EMP_CODIGO = D.EMP_CODIGO');
      RExistProd.QEntradas.SQL.Add('AND E.ENT_NUMERO = D.ENT_NUMERO');
      RExistProd.QEntradas.SQL.Add('AND D.DET_CANTIDAD IS NOT NULL');
      RExistProd.QEntradas.SQL.Add('AND E.ENT_STATUS <> '+#39+'ANU'+#39);
      RExistProd.QEntradas.SQL.Add('AND D.PRO_CODIGO = :PRO_CODIGO');
      RExistProd.QEntradas.SQL.Add('AND D.EMP_CODIGO = :EMP');
      RExistProd.QEntradas.SQL.Add('AND E.USU_CODIGO = U.USU_CODIGO');
      RExistProd.QEntradas.SQL.Add('AND E.ENT_FECHA BETWEEN convert(datetime,:FECHA1,105) AND convert(datetime,:FECHA2,105)');
      RExistProd.QEntradas.SQL.Add('and e.alm_codigo = '+Trim(edAlmacen.Text));
      RExistProd.QEntradas.SQL.Add('GROUP BY E.ENT_NUMERO, E.ENT_FECHA, D.DET_MEDIDA, U.USU_NOMBRE, e.ent_concepto,e.sup_codigo');
      RExistProd.QEntradas.SQL.Add('ORDER BY E.ENT_FECHA');

      RExistProd.QDevol.SQL.Clear;
      RExistProd.QDevol.SQL.Add('SELECT V.DEV_NUMERO, V.DEV_FECHA, D.DET_MEDIDA, U.USU_NOMBRE, v.dev_nombre,');
      RExistProd.QDevol.SQL.Add('SUM(D.DEV_CANTIDAD) AS CANTIDAD');
      RExistProd.QDevol.SQL.Add('FROM DEVOLUCION V, DET_DEVOLUCION D, FACTURAS F, USUARIOS U');
      RExistProd.QDevol.SQL.Add('WHERE V.EMP_CODIGO = D.EMP_CODIGO');
      RExistProd.QDevol.SQL.Add('AND V.DEV_NUMERO = D.DEV_NUMERO');
      RExistProd.QDevol.SQL.Add('AND V.EMP_CODIGO = F.EMP_CODIGO');
      RExistProd.QDevol.SQL.Add('AND V.FAC_FORMA = F.FAC_FORMA');
      RExistProd.QDevol.SQL.Add('AND V.TFA_CODIGO = F.TFA_CODIGO');
      RExistProd.QDevol.SQL.Add('AND V.FAC_NUMERO = F.FAC_NUMERO');
      RExistProd.QDevol.SQL.Add('AND V.DEV_STATUS <> '+#39+'ANU'+#39);
      RExistProd.QDevol.SQL.Add('AND D.EMP_CODIGO = :EMP');
      RExistProd.QDevol.SQL.Add('AND D.PRO_CODIGO = :PRO_CODIGO');
      RExistProd.QDevol.SQL.Add('AND D.DEV_CANTIDAD IS NOT NULL');
      RExistProd.QDevol.SQL.Add('AND V.USU_CODIGO = U.USU_CODIGO');
      RExistProd.QDevol.SQL.Add('AND V.DEV_FECHA BETWEEN convert(datetime,:FECHA1,105) AND convert(datetime,:FECHA2,105)');
      RExistProd.QDevol.SQL.Add('and d.alm_codigo = '+Trim(edAlmacen.Text));
      RExistProd.QDevol.SQL.Add('GROUP BY V.DEV_NUMERO, V.DEV_FECHA, D.DET_MEDIDA, U.USU_NOMBRE, v.dev_nombre');
      RExistProd.QDevol.SQL.Add('ORDER BY V.DEV_FECHA');

      RExistProd.QConduces.SQL.Clear;
      RExistProd.QConduces.SQL.Add('SELECT C.CON_NUMERO, C.CON_FECHA, D.DET_MEDIDA, U.USU_NOMBRE, c.con_nombre,');
      RExistProd.QConduces.SQL.Add('SUM(D.DET_CANTIDAD) AS CANTIDAD');
      RExistProd.QConduces.SQL.Add('FROM CONDUCE C, DET_CONDUCE D, USUARIOS U');
      RExistProd.QConduces.SQL.Add('WHERE C.EMP_CODIGO = D.EMP_CODIGO');
      RExistProd.QConduces.SQL.Add('AND C.CON_NUMERO = D.CON_NUMERO');
      RExistProd.QConduces.SQL.Add('AND C.CON_STATUS <> '+#39+'ANU'+#39);
      RExistProd.QConduces.SQL.Add('AND D.DET_CANTIDAD IS NOT NULL');
      RExistProd.QConduces.SQL.Add('AND D.PRO_CODIGO = :PRO_CODIGO');
      RExistProd.QConduces.SQL.Add('AND D.EMP_CODIGO = :EMP');
      RExistProd.QConduces.SQL.Add('AND C.USU_CODIGO = U.USU_CODIGO');
      RExistProd.QConduces.SQL.Add('AND C.CON_FECHA BETWEEN convert(datetime,:FECHA1,105) AND convert(datetime,:FECHA2,105)');
      RExistProd.QConduces.SQL.Add('and c.alm_codigo = '+Trim(edAlmacen.Text));
      RExistProd.QConduces.SQL.Add('GROUP BY C.CON_NUMERO, C.CON_FECHA, D.DET_MEDIDA, U.USU_NOMBRE, c.con_nombre');
      RExistProd.QConduces.SQL.Add('ORDER BY C.CON_FECHA');

      RExistProd.QFacturas.SQL.Clear;
      RExistProd.QFacturas.SQL.Add('SELECT F.FAC_FORMA, F.TFA_CODIGO, D.DET_MEDIDA,');
      RExistProd.QFacturas.SQL.Add('F.FAC_NUMERO, F.FAC_FECHA, U.USU_NOMBRE,f.fac_nombre,');
      RExistProd.QFacturas.SQL.Add('sum((d.det_cantidad+isnull(d.det_cant_oferta,0)) * isnull(d.det_cant_unidad_medida,1)) AS CANTIDAD');
      RExistProd.QFacturas.SQL.Add('FROM FACTURAS F, DET_FACTURA D, USUARIOS U');
      RExistProd.QFacturas.SQL.Add('WHERE F.EMP_CODIGO = D.EMP_CODIGO');
      RExistProd.QFacturas.SQL.Add('AND F.FAC_FORMA = D.FAC_FORMA');
      RExistProd.QFacturas.SQL.Add('AND F.TFA_CODIGO = D.TFA_CODIGO');
      RExistProd.QFacturas.SQL.Add('AND F.FAC_NUMERO = D.FAC_NUMERO');
      RExistProd.QFacturas.SQL.Add('AND F.FAC_STATUS <> '+#39+'ANU'+#39);
      RExistProd.QFacturas.SQL.Add('AND D.DET_CANTIDAD IS NOT NULL');
      RExistProd.QFacturas.SQL.Add('AND D.EMP_CODIGO = :EMP');
      RExistProd.QFacturas.SQL.Add('AND D.PRO_CODIGO = :PRO_CODIGO');
      RExistProd.QFacturas.SQL.Add('AND U.USU_CODIGO = F.USU_CODIGO');
      RExistProd.QFacturas.SQL.Add('AND F.FAC_FECHA BETWEEN convert(datetime,:FECHA1,105) AND convert(datetime,:FECHA2,105)');
      RExistProd.QFacturas.SQL.Add('and d.alm_codigo = '+Trim(edAlmacen.Text));
      RExistProd.QFacturas.SQL.Add('GROUP BY F.FAC_FORMA, F.TFA_CODIGO, D.DET_MEDIDA,');
      RExistProd.QFacturas.SQL.Add('F.FAC_NUMERO, F.FAC_FECHA, U.USU_NOMBRE,f.fac_nombre');
      RExistProd.QFacturas.SQL.Add('ORDER BY F.FAC_FECHA');

      RExistProd.QTickets.SQL.Clear;
      RExistProd.QTickets.SQL.Add('SELECT m.TICKET, m.FECHA, m.caja, u.usu_nombre, SUM(t.CANTIDAD) AS CANTIDAD');
      RExistProd.QTickets.SQL.Add('FROM TICKET t, montos_ticket m, usuarios u, cajas_ip c');
      RExistProd.QTickets.SQL.Add('WHERE t.fecha = m.fecha');
      RExistProd.QTickets.SQL.Add('and t.ticket = m.ticket');
      RExistProd.QTickets.SQL.Add('and t.usu_codigo = m.usu_codigo');
      RExistProd.QTickets.SQL.Add('and t.caja = m.caja');
      RExistProd.QTickets.SQL.Add('and m.usu_codigo = u.usu_codigo');
      RExistProd.QTickets.SQL.Add('and m.status = '+QuotedStr('FAC'));
      RExistProd.QTickets.SQL.Add('and m.FECHA BETWEEN convert(datetime,:FECHA1,105) AND convert(datetime,:FECHA2,105)');
      RExistProd.QTickets.SQL.Add('and t.producto = :pro_codigo');
      RExistProd.QTickets.SQL.Add('and m.caja = c.caja');
      RExistProd.QTickets.SQL.Add('and c.alm_codigo = '+Trim(edAlmacen.Text));
      RExistProd.QTickets.SQL.Add('GROUP BY m.TICKET, m.FECHA, m.caja, u.usu_nombre');
      RExistProd.QTickets.SQL.Add('ORDER BY m.FECHA');

      RExistProd.QTransferSalida.SQL.Clear;
      RExistProd.QTransferSalida.SQL.Add('SELECT t.tra_numero, t.tra_fecha, t.tra_concepto, u.usu_nombre,');
      RExistProd.QTransferSalida.SQL.Add('d.det_medida, sum(d.det_cantidad) as cantidad');
      RExistProd.QTransferSalida.SQL.Add('FROM transfer t, det_transfer d, usuarios u');
      RExistProd.QTransferSalida.SQL.Add('WHERE t.emp_codigo = d.emp_codigo');
      RExistProd.QTransferSalida.SQL.Add('and t.tra_numero = d.tra_numero');
      RExistProd.QTransferSalida.SQL.Add('and t.tra_status = '+QuotedStr('PRO'));
      RExistProd.QTransferSalida.SQL.Add('and t.emp_codigo = :emp');
      RExistProd.QTransferSalida.SQL.Add('and d.pro_codigo = :pro_codigo');
      RExistProd.QTransferSalida.SQL.Add('and t.usu_codigo = u.usu_codigo');
      RExistProd.QTransferSalida.SQL.Add('and t.tra_fecha between convert(datetime,:FECHA1,105) AND convert(datetime,:FECHA2,105)');
      RExistProd.QTransferSalida.SQL.Add('and t.tra_almacen1 = '+trim(edAlmacen.Text));
      RExistProd.QTransferSalida.SQL.Add('GROUP BY t.tra_numero, t.tra_fecha, t.tra_concepto, u.usu_nombre, d.det_medida');
      RExistProd.QTransferSalida.SQL.Add('ORDER BY t.tra_fecha');

      RExistProd.QTransferEntrada.SQL.Clear;
      RExistProd.QTransferEntrada.SQL.Add('SELECT t.tra_numero, t.tra_fecha, t.tra_concepto, u.usu_nombre,');
      RExistProd.QTransferEntrada.SQL.Add('d.det_medida2, sum(d.det_cantidad2) as cantidad');
      RExistProd.QTransferEntrada.SQL.Add('FROM transfer t, det_transfer d, usuarios u');
      RExistProd.QTransferEntrada.SQL.Add('WHERE t.emp_codigo = d.emp_codigo');
      RExistProd.QTransferEntrada.SQL.Add('and t.tra_numero = d.tra_numero');
      RExistProd.QTransferEntrada.SQL.Add('and t.tra_status = '+QuotedStr('PRO'));
      RExistProd.QTransferEntrada.SQL.Add('and t.emp_codigo = :emp');
      RExistProd.QTransferEntrada.SQL.Add('and d.pro_codigo = :pro_codigo');
      RExistProd.QTransferEntrada.SQL.Add('and t.usu_codigo = u.usu_codigo');
      RExistProd.QTransferEntrada.SQL.Add('and t.tra_fecha between convert(datetime,:FECHA1,105) AND convert(datetime,:FECHA2,105)');
      RExistProd.QTransferEntrada.SQL.Add('and t.tra_almacen2 = '+trim(edAlmacen.Text));
      RExistProd.QTransferEntrada.SQL.Add('GROUP BY t.tra_numero, t.tra_fecha, t.tra_concepto, u.usu_nombre, d.det_medida2');
      RExistProd.QTransferEntrada.SQL.Add('ORDER BY t.tra_fecha');

      RExistProd.QCompras.SQL.Clear;
      RExistProd.QCompras.SQL.Add('SELECT P.SUP_NOMBRE, F.FAC_NUMERO, F.FAC_FECHA,');
      RExistProd.QCompras.SQL.Add('U.USU_NOMBRE, D.DET_MEDIDA, SUM(D.DET_CANTIDAD+isnull(d.det_oferta,0)) AS CANTIDAD');
      RExistProd.QCompras.SQL.Add('FROM DET_PROVFACTURAS D, PROVFACTURAS F, PROVEEDORES P, USUARIOS U');
      RExistProd.QCompras.SQL.Add('WHERE F.EMP_CODIGO = D.EMP_CODIGO');
      RExistProd.QCompras.SQL.Add('AND F.FAC_NUMERO = D.FAC_NUMERO');
      RExistProd.QCompras.SQL.Add('AND F.SUP_CODIGO = D.SUP_CODIGO /*Fernando 20170720*/');   
      RExistProd.QCompras.SQL.Add('AND F.SUP_CODIGO = P.SUP_CODIGO');
      RExistProd.QCompras.SQL.Add('AND P.EMP_CODIGO = '+dm.QParametrosPAR_INVEMPRESA.AsString); 
      RExistProd.QCompras.SQL.Add('AND F.FAC_STATUS <> '+QuotedStr('ANU'));
      RExistProd.QCompras.SQL.Add('AND D.EMP_CODIGO = :EMP');
      RExistProd.QCompras.SQL.Add('AND D.PRO_CODIGO = :PRO_CODIGO');
      RExistProd.QCompras.SQL.Add('AND F.USU_CODIGO = U.USU_CODIGO');
      RExistProd.QCompras.SQL.Add('and f.alm_codigo = '+trim(edAlmacen.Text));
      RExistProd.QCompras.SQL.Add('AND F.FAC_FECHA BETWEEN convert(datetime,:FECHA1,105) AND convert(datetime,:FECHA2,105)');
      RExistProd.QCompras.SQL.Add('GROUP BY P.SUP_NOMBRE, F.FAC_NUMERO, F.FAC_FECHA,');
      RExistProd.QCompras.SQL.Add('D.DET_MEDIDA, U.USU_NOMBRE');
      RExistProd.QCompras.SQL.Add('ORDER BY F.FAC_FECHA');
    end;
    RExistProd.QProductos.Parameters.ParamByName('prod').Value := prod;
    RExistProd.QProductos.Parameters.ParamByName('emp').Value  := DM.QParametrosPAR_INVEMPRESA.Value;
    RExistProd.QProductos.Open;

    RExistProd.QEntradas.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QEntradas.Parameters.ParamByName('fecha2').DataType := ftDate;
    RExistProd.QEntradas.Parameters.ParamByName('emp').Value       := dm.QEmpresasEMP_CODIGO.Value;

    RExistProd.QConduces.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QConduces.Parameters.ParamByName('fecha2').DataType := ftDate;
    RExistProd.QConduces.Parameters.ParamByName('emp').Value       := dm.QEmpresasEMP_CODIGO.Value;

    RExistProd.QFacturas.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QFacturas.Parameters.ParamByName('fecha2').DataType := ftDate;
    RExistProd.QFacturas.Parameters.ParamByName('emp').Value       := dm.QEmpresasEMP_CODIGO.Value;

    RExistProd.QDevol.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QDevol.Parameters.ParamByName('fecha2').DataType := ftDate;
    RExistProd.QDevol.Parameters.ParamByName('emp').Value       := dm.QEmpresasEMP_CODIGO.Value;

    RExistProd.QCompras.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QCompras.Parameters.ParamByName('fecha2').DataType := ftDate;
    RExistProd.QCompras.Parameters.ParamByName('emp').Value       := dm.QEmpresasEMP_CODIGO.Value;

    RExistProd.QDevCompra.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QDevCompra.Parameters.ParamByName('fecha2').DataType := ftDate;
    RExistProd.QDevCompra.Parameters.ParamByName('emp').Value       := dm.QEmpresasEMP_CODIGO.Value;

    RExistProd.QTransferSalida.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QTransferSalida.Parameters.ParamByName('fecha2').DataType := ftDate;
    RExistProd.QTransferSalida.Parameters.ParamByName('emp').Value       := dm.QEmpresasEMP_CODIGO.Value;

    RExistProd.QTransferEntrada.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QTransferEntrada.Parameters.ParamByName('fecha2').DataType := ftDate;
    RExistProd.QTransferEntrada.Parameters.ParamByName('emp').Value       := dm.QEmpresasEMP_CODIGO.Value;

    RExistProd.QEntradas.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QEntradas.Parameters.ParamByName('fecha2').DataType := ftDate;

    RExistProd.QTickets.Parameters.ParamByName('fecha1').DataType := ftDate;
    RExistProd.QTickets.Parameters.ParamByName('fecha2').DataType := ftDate;

    RExistProd.QConduces.Parameters.ParamByName('fecha1').Value    := Fecha1.Date;
    RExistProd.QConduces.Parameters.ParamByName('fecha2').Value    := Fecha2.Date;
    RExistProd.QEntradas.Parameters.ParamByName('fecha1').Value    := Fecha1.Date;
    RExistProd.QEntradas.Parameters.ParamByName('fecha2').Value    := Fecha2.Date;
    RExistProd.QFacturas.Parameters.ParamByName('fecha1').Value    := Fecha1.Date;
    RExistProd.QFacturas.Parameters.ParamByName('fecha2').Value    := Fecha2.Date;
    RExistProd.QDevol.Parameters.ParamByName('fecha1').Value       := Fecha1.Date;
    RExistProd.QDevol.Parameters.ParamByName('fecha2').Value       := Fecha2.Date;
    RExistProd.QCompras.Parameters.ParamByName('fecha1').Value     := Fecha1.Date;
    RExistProd.QCompras.Parameters.ParamByName('fecha2').Value     := Fecha2.Date;
    RExistProd.QDevCompra.Parameters.ParamByName('fecha1').Value   := Fecha1.Date;
    RExistProd.QDevCompra.Parameters.ParamByName('fecha2').Value   := Fecha2.Date;
    RExistProd.QTickets.Parameters.ParamByName('fecha1').Value    := Fecha1.Date;
    RExistProd.QTickets.Parameters.ParamByName('fecha2').Value    := Fecha2.Date;
    RExistProd.QTransferSalida.Parameters.ParamByName('fecha1').Value    := Fecha1.Date;
    RExistProd.QTransferSalida.Parameters.ParamByName('fecha2').Value    := Fecha2.Date;
    RExistProd.QTransferEntrada.Parameters.ParamByName('fecha1').Value    := Fecha1.Date;
    RExistProd.QTransferEntrada.Parameters.ParamByName('fecha2').Value    := Fecha2.Date;

    if ckentrada.Checked     then
    begin
      RExistProd.QEntradas.Open;
      RExistProd.QTransferEntrada.Open;
    end;
    if ckcompra.Checked      then RExistProd.QCompras.Open;
    if ckdevolventa.Checked  then RExistProd.QDevol.Open;
    if cksalilda.Checked     then
    begin
      RExistProd.QConduces.Open;
      RExistProd.QTransferSalida.Open;
    end;
    if ckdevolcompra.Checked then  RExistProd.QDevCompra.Open;

    if ckfactura.Checked then
    begin
      RExistProd.QFacturas.Open;
      RExistProd.QTickets.Open;
    end;
    RExistProd.lbFecha.Caption := 'Del '+DateToStr(Fecha1.Date)+' Al '+DateToStr(Fecha2.Date);
    screen.Cursor := crDefault;
    RExistProd.PrinterSetup;
    RExistProd.Preview;
    RExistProd.Destroy;
  end;
end;

procedure TfrmExistProducto.btCloseClick(Sender: TObject);
begin
  Close;
end;

procedure TfrmExistProducto.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if key = chr(vk_return) then
     begin
       perform(wm_nextdlgctl, 0, 0);
       key := #0;
     end;
end;

end.
